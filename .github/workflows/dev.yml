# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ dev ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  
concurrency:
  group: dev
  cancel-in-progress: true
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      
      # Install wakeonlan
      # - name: Make scripts executable
      #   run: sudo apt-get install -y wakeonlan

      - name: Setup SSH Keys and known_hosts
        env:
            SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        run: |
            ssh-agent -a $SSH_AUTH_SOCK > /dev/null
            ssh-add - <<< "${{ secrets.DEPLOY_KEY }}"
        
      # Runs a set of commands using the runners shell
      - name: Sync with game servers
        env:
            SSH_AUTH_SOCK: /tmp/ssh_agent.sock
        run: |
          # For potato.tf servers (pterodactyl user)
          for i in "22 pterodactyl@us.potato.tf" "22 pterodactyl@ustx.potato.tf" "22 pterodactyl@br.potato.tf" "22 pterodactyl@usw2.potato.tf" "27035 pterodactyl@eu.potato.tf" "22 pterodactyl@eu1.potato.tf" "22 pterodactyl@sgp.potato.tf"; do a=( $i ); 
          {
            chmod +x ./devserver_config/vpi/*.py

            rsync -a \
            --exclude='mge/vpi' \
            --exclude='mge/cfg/config.nut' \
            --exclude='requirements.txt' \
            --exclude='mge_windows_setup.bat' \
            -e "ssh -p ${a[0]} -o StrictHostKeyChecking=no" ./mge ${a[1]}:/var/tf2server_noplugins/tf/scripts/vscripts

            # Sync config files
            rsync -a -e "ssh -p ${a[0]} -o StrictHostKeyChecking=no" ./devserver_config/vpi ${a[1]}:/var/tf2server_noplugins/tf/scripts/vscripts/mge
            rsync -a -e "ssh -p ${a[0]} -o StrictHostKeyChecking=no" ./devserver_config/config.nut ${a[1]}:/var/tf2server_noplugins/tf/scripts/vscripts/mge/cfg/config.nut
            rsync -a -e "ssh -p ${a[0]} -o StrictHostKeyChecking=no" ./mapspawn.nut ${a[1]}:/var/tf2server_noplugins/tf/scripts/vscripts/mge_init.nut
          } &
          done
          wait


